@page
@model ValleyVisionSolution.Pages.TaskManager.TaskManagerPageModel
@{
    ViewData["Title"] = "Task Manager";
}

<style>
    .dashboard-grid {
        display: grid;
        grid-template-columns: 3fr 1fr;
        grid-template-areas:
            "AllTasks MyTasks";
        gap: 5vw;
    }

    #MyTasks {
        grid-area: MyTasks;
    }

    #Plan {
        grid-area: AllTasks;
    }

    .dashboard-tile-title-bar {
        position: relative; 
        background-color: #274C77;
        width:100%;
        height:2vw;
        display: flex;
        align-items: center;
    }

    .dashboard-tile-title {
        position: absolute;
        left: 50%;
        transform: translateX(-50%);
        margin: 0; /* Remove default margin */
        color:#fff;
        font-size:1vw;
    }

    .add-task-button-container {
        border: none;
        background-color: #274C77;
        position: absolute;
        right: 1vw; /* Adjust as needed */
        top: 50%;
        transform: translateY(-50%);
        display:flex;
        align-items:center;
        
    }

    .add-task-button {
        height: 1vw;
        width: 1vw;
    }

        .add-task-button:hover {
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);
        }

    .dashboard-tile-contents {
        padding: 2.5% 6% 2.5% 6%;
        background-color: #f2f2f2;
        height:70vh;
    }

    .taskBubble {
        border: 1px solid black;
        border-radius: 6px;
        margin: 4%;
        display: grid;
        grid-template-columns: 1fr 0.1fr;
        grid-template-rows: 1fr 0.5fr;
        grid-template-areas:
            "Name Icon"
            "Date Icon";
        gap: 2%;
        padding: 1% 1% 2.5% 2.5%;
    }

    .taskName {
        font-size: 1em;
        grid-area: Name;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .taskDate {
        font-size: x-small;
        grid-area: Date;
        overflow: hidden;
        white-space: nowrap;
        text-overflow: ellipsis;
    }

    .statusIconContainer {
        grid-area: Icon;
        display: flex;
        align-items: center;
    }

    .statusIcon {
        height: 1.25vw;
        width: 1.25vw;
    }

    .toDoBubble {
        background-color: #fff;
    }

    .inProgressBubble {
        background-color: #fff;
    }

    .completedBubble {
        background-color: #fff;
    }

    .plan-grid {
        display: grid;
        grid-template-columns: 1fr 1fr 1fr;
        grid-template-rows: 1fr;
        grid-template-areas:
            "ToDo InProgress Completed";
        gap: 8%;
    }

    .toDo-area {
        grid-area: ToDo;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 0.1fr 1fr;
        grid-template-areas:
            "Head"
            "Body";
        height: fit-content;
    }

    .inProgress-area {
        grid-area: InProgress;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 0.1fr 1fr;
        grid-template-areas:
            "Head"
            "Body";
        height: fit-content;
    }

    .completed-area {
        grid-area: Completed;
        display: grid;
        grid-template-columns: 1fr;
        grid-template-rows: 0.1fr 1fr;
        grid-template-areas:
            "Head"
            "Body";
        height: fit-content;
    }

    .plan-status-section {
        border: 1px solid black;
        max-height: 80vh; 
        overflow-y: auto; 
    }

    .plan-status-section-title-bar {
        grid-area: Head;
        text-align: center;
        border-bottom: 1px solid black;
        background-color: #6a95b7;
        display: flex;
        align-items: center;
        justify-content: center;
        height:1.5vw;
    }

    .plan-status-section-title {
        font-size:0.75vw;
        color: #fff;
    }

    

    .plan-status-section-contents {
        grid-area: Body;
        padding: 2%;
    }

    .bootstrap-select > .dropdown-toggle {
        height: 38px;
    }

        .bootstrap-select > .dropdown-toggle:active,
        .bootstrap-select > .dropdown-toggle:focus {
            outline: none !important;
        }

    .filePickerContainer {
        display: grid;
        grid-template-columns: 85% 15%;
        grid-template-areas:
            "Icon Button";
    }

    .button {
        grid-area: Button;
        border: none;
        background-color: #0d6efd;
        color: white;
    }

    .filePicker {
        grid-area: Icon;
        display: flex;
        justify-content: right;
        border: 1px solid black;
    }

    .knowledge-container {
        margin: 2%;
    }

    .knowledge-title {
        margin-left: 10%;
        font-size: smaller;
    }

    .receivedMessageContainer {
        display: flex;
        justify-content: left;
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .receivedMessage {
        border-radius: 15px;
        padding: 5px 10px 5px 10px;
        background-color: lightgrey;
        display: inline-block;
    }

    .sentMessageContainer {
        display: flex;
        justify-content: right;
        margin-top: 5px;
        margin-bottom: 5px;
    }

    .sender {
        padding: 5px 10px 0px 10px;
        display: inline-block;
        font-size: smaller;
    }

    .sentMessage {
        border-radius: 15px;
        padding: 5px 10px 5px 10px;
        background-color: #5285f7;
        display: inline-block;
        color: white;
    }

    .messageForm {
        position: fixed;
        bottom: 3%;
        margin-left: 10px;
    }

    .messageContent {
        border-radius: 15px;
        border: 1px solid grey;
        padding: 5px 10px 5px 10px;
    }

    .sendMessageBtn {
        background-color: #5285f7;
        border-radius: 15px;
    }

</style>

<!-- Add New Task Form -->
<div class="modal fade" id="addTaskForm" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" asp-page="/DashboardPage">
                <input type="hidden" name="triggeredBy" id="triggeredBy" value="">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Add Task</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div>Task Name:</div>
                            @*<input type="hidden" asp-for="NewTask">
                            <input type="hidden" asp-for="NewTask">*@
                            <input asp-for="@Model.NewTask.TaskName" type="text" class="form-control">
                            <span class="text-danger" asp-validation-for="@Model.NewTask.TaskName"></span>
                        </div>
                        <div class="col-md-6">
                            <div>Assign to:</div>
                            <select asp-for="@Model.NewTaskUsers" class="selectpicker form-control" multiple data-live-search="true" style="height:38px">
                                @{
                                    foreach (var user in Model.InitUsers)
                                    {
                                        <option value="@user.UserID">@user.FirstName @user.LastName</option>
                                    }
                                }

                            </select>

                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div>Due Date:</div>
                            <input asp-for="@Model.NewTask.TaskDueDateTime" type="date" class="form-control">
                            <span class="text-danger" asp-validation-for="@Model.NewTask.TaskDueDateTime"></span>
                        </div>
                        <div class="col-md-6">
                            <div>Status:</div>
                            <select asp-for="@Model.NewTask.TaskStatus" class="form-control" id="taskStatus">
                                <option value="To Do">To Do </option>
                                <option value="In Progress">In Progress</option>
                                <option value="Completed">Completed</option>
                            </select>
                            <span class="text-danger" asp-validation-for="@Model.NewTask.TaskStatus"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <div>Description:</div>
                            <textarea asp-for="@Model.NewTask.TaskDescription" class="form-control" id="taskDescription" rows="3" maxlength="250"></textarea>
                            <span class="text-danger" asp-validation-for="@Model.NewTask.TaskDescription"></span>
                        </div>
                    </div>

                </div>
                <div class="modal-footer" style="border-top:none">
                    <button type="reset" id="addTaskFormClearBtn" class="btn btn-secondary">Clear</button>
                    <button type="submit" class="btn btn-primary" asp-page-handler="AddTask">Add</button>
                </div>
            </form>

        </div>
    </div>
</div>
<!-- End New Task Form -->

<div class="dashboard-grid">
    @*All Tasks*@
    <div id="Plan" class="dashboard-tile">
        <div class="dashboard-tile-title-bar">
            <div class="dashboard-tile-title">Task Manager</div>
            <button class="add-task-button-container" data-bs-toggle="modal" data-bs-target="#addTaskForm">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="white" class=" add-task-button bi bi-plus-square-fill" viewBox="0 0 16 16">
                    <path d="M2 0a2 2 0 0 0-2 2v12a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V2a2 2 0 0 0-2-2zm6.5 4.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3a.5.5 0 0 1 1 0" />
                </svg>
            </button>
        </div>

        <div class="dashboard-tile-contents">
            <div class="plan-grid">

                <div class="plan-status-section toDo-area">
                    <div class="plan-status-section-title-bar">
                        <div class="plan-status-section-title">To Do</div>
                    </div>
                    <div class="plan-status-section-contents">
                        @* Create task list in To Do *@
                        @{
                            foreach (var task in Model.AllTasks)
                            {
                                if (task.TaskStatus == "To Do")
                                {
                                    <div class="taskBubble toDoBubble">
                                        <div class="taskName">@task.TaskName</div>
                                        <div class="taskDate">@task.TaskDueDateTime</div>
                                        <div class="statusIconContainer">
                                            <img class="statusIcon" src="/Images/icon_to-do_status.jpg" />
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="plan-status-section inProgress-area">
                    <div class="plan-status-section-title-bar">
                        <div class="plan-status-section-title">In Progress</div>
                    </div>
                    <div class="plan-status-section-contents">

                        @* Create task list in In Progress *@
                        @{
                            foreach (var task in Model.AllTasks)
                            {
                                if (task.TaskStatus == "In Progress")
                                {
                                    <div class="taskBubble inProgressBubble">
                                        <div class="taskName">@task.TaskName</div>
                                        <div class="taskDate">@task.TaskDueDateTime</div>
                                        <div class="statusIconContainer">
                                            <img class="statusIcon" src="/Images/icon_in-progress_status.jpg">
                                        </div>
                                    </div>
                                }
                            }
                        }
                    </div>
                </div>
                <div class="plan-status-section completed-area">
                    <div class="plan-status-section-title-bar">
                        <div class="plan-status-section-title">Completed</div>
                    </div>
                    <div class="plan-status-section-contents">
                        @* Create task list in Completed*@
                        @{
                            foreach (var task in Model.AllTasks)
                            {
                                if (task.TaskStatus == "Completed")
                                {
                                    <div class="taskBubble completedBubble">
                                        <div class="taskName">@task.TaskName</div>
                                        <div class="taskDate">@task.TaskDueDateTime</div>
                                        <div class="statusIconContainer">
                                            <img class="statusIcon" src="/Images/icon_completed_status.jpg" />
                                        </div>
                                    </div>
                                }
                            }
                        }

                    </div>
                </div>
            </div>
        </div>
    </div>

    @*My Tasks*@
    <div id="MyTasks" class="dashboard-tile">
        <div class="dashboard-tile-title-bar">
            <div class="dashboard-tile-title">My Tasks</div>
        </div>
        <div class="dashboard-tile-contents">
            @* Create task list in MyTasks *@
            @{
                foreach (var task in Model.MyTasks)
                {
                    if (task.TaskStatus == "To Do")
                    {
                        <div class="taskBubble toDoBubble">
                            <div class="taskName">@task.TaskName</div>
                            <div class="taskDate">@task.TaskDueDateTime</div>
                            <div class="statusIconContainer">
                                <img class="statusIcon" src="/Images/icon_to-do_status.jpg" />
                            </div>
                        </div>
                    }
                    if (task.TaskStatus == "In Progress")
                    {
                        <div class="taskBubble inProgressBubble">
                            <div class="taskName">@task.TaskName</div>
                            <div class="taskDate">@task.TaskDueDateTime</div>
                            <div class="statusIconContainer">
                                <img class="statusIcon" src="/Images/icon_in-progress_status.jpg">
                            </div>
                        </div>
                    }
                    if (task.TaskStatus == "Completed")
                    {
                        <div class="taskBubble completedBubble">
                            <div class="taskName">@task.TaskName</div>
                            <div class="taskDate">@task.TaskDueDateTime</div>
                            <div class="statusIconContainer">
                                <img class="statusIcon" src="/Images/icon_completed_status.jpg" />
                            </div>
                        </div>
                    }
                }
            }

    </div>
</div>
