@page
@model ValleyVisionSolution.Pages.TaskManager.EditTaskPageModel
@using Task = ValleyVisionSolution.Pages.DataClasses.Task;
@{
}

<style>
    .btn-light {
        background-color: white !important;
        border-color: lightgrey;
        color: black !important;
    }

        .btn-check:focus + .btn-light, .btn-light:focus {
            color: #000;
            background-color: #f9fafb;
            border-color: #f9fafb;
            box-shadow: 0 0 0 0.25rem rgba(211,212,213,.5);
        }
    .btn-light:hover{
        border-color:lightgrey;
    }

    .choices[data-type*='select-multiple'] .choices__list.choices__list--multiple .choices__item {
        padding-left: 30px;
        position: relative;
        white-space: nowrap;
        min-width: 150px;
        border-radius: 20px;
        padding: 4px 10px;
        font-size: 12px;
        font-weight: 500;
        margin-right: 3.75px;
        margin-bottom: 3.75px;
        background-color: #274c77; /* Ensuring the background color applies */
        border: 1px solid #d3d3d3;
        color: white; /* Text color */
    }

        .choices[data-type*='select-multiple'] .choices__list.choices__list--multiple .choices__item.is-selected::before {
            content: "";
            display: block;
            position: absolute;
            left: 10px;
            top: 50%;
            transform: translateY(-50%);
            width: 15px;
            height: 15px;
            border: 1px solid #274c77;
            background-color: #274c77;
            border-radius: 3px;
            background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 8 8"%3E%3Cpath fill="%23ffffff" d="M6.564.75l-3.59 3.612-1.538-1.55L0 4.234l2.974 3.02 5.196-5.232z"/%3E%3C/svg%3E');
            background-repeat: no-repeat;
            background-position: center;
        }

</style>

<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/choices.js/public/assets/styles/choices.min.css">
<script src="https://cdn.jsdelivr.net/npm/choices.js/public/assets/scripts/choices.min.js"></script>

<!-- Edit Task Form -->
<div class="modal fade" id="editTaskForm" data-bs-backdrop="static" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <form method="post" asp-page="/TaskManagerPage" onsubmit="return confirm('Are you sure?')">
                <input type="hidden" name="triggeredBy" id="triggeredBy" value="">
                <div class="modal-header">
                    <h5 class="modal-title" id="exampleModalLongTitle">Task View</h5>
                    <button type="button" class="btn-close" id="closeButton" data-bs-dismiss="modal" aria-label="Close">
                    </button>
                </div>
                <div class="modal-body">

                    <input type="hidden" asp-for="@Model.EditedTask.TaskID" value="@Model.ViewedTask">
                    @{
                        Task TaskData = new Task();
                        foreach (var task in Model.AllTasks)
                        {
                            if (task.TaskID == Model.ViewedTask)
                            {
                                TaskData = task;
                            }
                        }
                    }

                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div>Task Name:</div>
                            <input asp-for="@Model.EditedTask.TaskName" type="text" class="form-control" value="@TaskData.TaskName">
                            <span class="text-danger" asp-validation-for="@Model.EditedTask.TaskName"></span>
                        </div>
                        <div class="col-md-6">
                            <div>Assign to:</div>
                            <select asp-for="@Model.EditedTaskUser" class="form-control" multiple data-placeholder="Select users...">
                                @{
                                    foreach (var user in Model.InitUsers)
                                    {
                                        if (Model.ViewedTaskUser.Contains(user.UserID))
                                        {
                                            <option value="@user.UserID" selected>@user.FirstName @user.LastName</option>
                                        }
                                        else
                                        {
                                            <option value="@user.UserID">@user.FirstName @user.LastName</option>
                                        }
                                    }
                                }
                            </select>
                        </div>

@*                         <div class="col-md-6">
                            <div>Assign to:</div>
                            <select asp-for="@Model.EditedTaskUser" class="selectpicker form-control" multiple data-live-search="true" style="height:38px">
                                @{
                                    foreach (var user in Model.InitUsers)
                                    {
                                        if(Model.ViewedTaskUser.Contains(user.UserID))
                                        {
                                            <option value="@user.UserID" selected>@user.FirstName @user.LastName</option>
                                        }
                                        else
                                        {
                                            <option value="@user.UserID">@user.FirstName @user.LastName</option>
                                        }
                                    }
                                }

                            </select>

                        </div> *@
                    </div>
                    <div class="row mb-3">
                        <div class="col-md-6">
                            <div>Due Date:</div>
                            <input asp-for="@Model.EditedTask.TaskDueDateTime" type="date" class="form-control" value="@TaskData.TaskDueDateTime.ToString("yyyy-MM-dd")">
                            <span class="text-danger" asp-validation-for="@Model.EditedTask.TaskDueDateTime"></span>
                        </div>
                        <div class="col-md-6">
                            <div>Status:</div>
                            <select class="form-select" asp-for="@Model.EditedTask.TaskStatus" id="taskStatus">
                                @if(TaskData.TaskStatus == "To Do")
                                {
                                    <option value="To Do" selected>To Do </option>
                                    <option value="In Progress">In Progress</option>
                                    <option value="Completed">Completed</option>
                                }
                                @if(TaskData.TaskStatus == "In Progress")
                                {
                                    <option value="To Do">To Do </option>
                                    <option value="In Progress" selected>In Progress</option>
                                    <option value="Completed">Completed</option>
                                }
                                @if (TaskData.TaskStatus == "Completed")
                                {
                                    <option value="To Do">To Do </option>
                                    <option value="In Progress">In Progress</option>
                                    <option value="Completed" selected>Completed</option>
                                }
                                
                            </select>
                            <span class="text-danger" asp-validation-for="@Model.EditedTask.TaskStatus"></span>
                        </div>
                    </div>
                    <div class="row mb-3">
                        <div class="col-12">
                            <div>Description:</div>
                            <textarea asp-for="@Model.TempTaskDescription" class="form-control" id="taskDescription" rows="3" maxlength="250"></textarea>
                            <span class="text-danger" asp-validation-for="@Model.TempTaskDescription"></span>
                            <input type="hidden" asp-for="@Model.EditedTask.TaskDescription" value="tempDesc">
                        </div>
                    </div>

                </div>
                <div class="modal-footer" style="border-top:none">
                    <button type="submit" class="btn btn-danger ml-auto" asp-page-handler="DeleteTask">Delete</button>
                    <button type="submit" class="btn btn-primary" asp-page-handler="UpdateTask">Update</button>
                </div>
            </form>

        </div>
    </div>
</div>
<!-- End Edit Task Form -->
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0-alpha1/dist/js/bootstrap.bundle.min.js" ></script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var editTaskForm = new bootstrap.Modal(document.getElementById('editTaskForm'), {
            keyboard: false,
            backdrop: 'static'
        });
        editTaskForm.show();
    });

    document.getElementById('closeButton').addEventListener('click', function () {
        // Redirect to the specific page
        window.location.href = '/TaskManager/TaskManagerPage';
    });
</script>
<script>
    document.addEventListener('DOMContentLoaded', function () {
        var elements = document.querySelectorAll('select[multiple]');
        elements.forEach(function (el) {
            new Choices(el, {
                removeItemButton: true,
                searchEnabled: true,
                searchPlaceholderValue: 'Search here...',
                shouldSort: false // Disable sorting to maintain server-side order
            });
        });
    });
</script>
