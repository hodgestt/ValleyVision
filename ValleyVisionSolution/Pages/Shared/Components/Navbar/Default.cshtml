@using ValleyVisionSolution.Pages.DataClasses 
@model (List<ValleyVisionSolution.Pages.DataClasses.Tile>, List<ValleyVisionSolution.Pages.DataClasses.Initiative>)
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/js/bootstrap.bundle.min.js"></script>



<style>
    .active-nav-link {
        text-decoration: underline;
    }

    .initiative-name {
        font-weight: bold;
        font-size: 1.4em; /* Adjust font size as needed */
        margin-right: 20px; /* Adds space to the right of the initiative name */
        text-decoration: none;
        color: black;
    }
    /* Ensure all items align properly */
    .navbar-nav .nav-item .nav-link, .navbar-nav .nav-item .navbar-text {
        align-items: center;
        display: flex;
        color: black;
        font-size: 1.2em;
    }
</style>

<ul class="navbar-nav d-flex align-items-center" style="font-size:1vw"> <!-- This ensures all nav items are in line -->
    @{
        var initPath = "/Initiatives/InitiativesPage";
    }

    @if (Context.Session.GetString("InitName") != null)
    {
        <li class="nav-item dropdown">
            <a class="nav-link dropdown-toggle initiative-name" href="#" id="initiativesDropdown" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                @Context.Session.GetString("InitName")
            </a>
            <ul class="dropdown-menu" aria-labelledby="initiativesDropdown">
                @foreach (var initiative in Model.Item2) // Correctly accessing the initiatives
                {
                    <li><a class="dropdown-item" asp-page="/Dashboard/DashboardPage" asp-route-initID="@initiative.InitID" asp-route-initName="@initiative.InitName">@initiative.InitName</a></li>
                }
            </ul>
        </li>
    }
    @{
        var dashboardPath = "/Dashboard/DashboardPage"; // Ensure this path is correct
        var isDashboardActive = Context.Request.Path.StartsWithSegments(new PathString(dashboardPath), StringComparison.OrdinalIgnoreCase) ? "active-nav-link" : "";
    }
    <li class="nav-item">
        <a class="nav-link @isDashboardActive" href="@dashboardPath">Dashboard</a>
    </li>

    @foreach (var tile in Model.Item1)
    {
        var isActive = Context.Request.Path.Value.Equals(tile.PageLink, StringComparison.OrdinalIgnoreCase) ? "active-nav-link" : "";
        <li class="nav-item">
            <a class="nav-link @isActive" href="@tile.PageLink">@tile.TileName</a>
        </li>
    }
</ul>
